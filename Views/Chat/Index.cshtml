@{
    ViewData["Title"] = "Chat Room";
}


<div class="chat-container">
    <!-- Chat messages will appear here -->
    <div id="chatBox">
        <ul id="messagesList"></ul>
    </div>

    <!-- Input for user name and messages -->
    <div class="input-container">
        <input type="text" id="userInput" placeholder="Your name" />
        <input type="text" id="messageInput" placeholder="Your message" />
        <button onclick="sendMessage()">Send</button>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.1/signalr.min.js"></script>

<script>
    // Create the SignalR connection
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub") // Matches your ChatHub endpoint
        .build();

    // When a message is received, display it in the chat box
    connection.on("ReceiveMessage", (user, message) => {
        const li = document.createElement("li");
        li.innerHTML = `<strong>${user}:</strong> ${message}`;
        document.getElementById("messagesList").appendChild(li);

        // Auto-scroll to the bottom of the chat box
        const chatBox = document.getElementById("chatBox");
        chatBox.scrollTop = chatBox.scrollHeight;
    });

    // Start the SignalR connection
    connection.start()
        .then(() => console.log("SignalR connection established."))
        .catch(err => console.error("SignalR connection failed:", err));

    // Send message to the hub
    function sendMessage() {
        const user = document.getElementById("userInput").value.trim();
        const message = document.getElementById("messageInput").value.trim();

        if (user && message) {
            // Send the message to the server
            connection.invoke("SendMessage", user, message)
                .catch(err => console.error("Error sending message:", err));

            // Clear the message input
            document.getElementById("messageInput").value = '';
        } else {
            alert("Both name and message are required!");
        }
    }
</script>

<style>
    /* Styling the chat UI */
    .chat-container {
        width: 50%;
        margin: 20px auto;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    #chatBox {
        width: 100%;
        height: 300px;
        border: 1px solid #ccc;
        border-radius: 8px;
        background-color: #f9f9f9;
        overflow-y: auto;
        padding: 10px;
        margin-bottom: 15px;
    }

    #messagesList {
        list-style-type: none;
        padding: 0;
        margin: 0;
    }

    .input-container {
        display: flex;
        gap: 10px;
        width: 100%;
    }

    input, button {
        padding: 10px;
        flex: 1;
    }

    input {
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    button {
        flex: 0.5;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        button:hover {
            background-color: #0056b3;
        }
</style>
